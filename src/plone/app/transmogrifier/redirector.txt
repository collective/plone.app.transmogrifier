Redirector section
==================

A redirector section uses `plone.app.redirector`_ to manage redirects
and update paths in keys.

    >>> import pprint
    >>> redirector = """
    ... [transmogrifier]
    ... pipeline =
    ...     source
    ...     old-paths
    ...     redirect
    ...     logger
    ... 
    ... [source]
    ... blueprint = collective.transmogrifier.sections.csvsource
    ... filename = plone.app.transmogrifier:redirector.csv
    ... 
    ... [old-paths]
    ... blueprint = collective.transmogrifier.sections.inserter
    ... key = string:_old_paths
    ... condition = exists:item/_old_paths
    ... value = python:item['_old_paths'].split(':')
    ... 
    ... blueprint = collective.transmogrifier.sections.inserter
    ... 
    ... [redirect]
    ... blueprint = plone.app.transmogrifier.redirector
    ...
    ... [logger]
    ... blueprint = collective.transmogrifier.sections.logger
    ... name = logger
    ... level = INFO
    ... """
    >>> registerConfig(
    ...     u'plone.app.transmogrifier.tests.redirector', redirector)

    >>> transmogrifier(u'plone.app.transmogrifier.tests.redirector')
    >>> print handler
    logger INFO
      {'_old_paths': ['corge', 'waldo'], '_path': 'foo', 'remoteUrl': ''}
    logger INFO
        {'_old_paths': ['corge/item-00', 'waldo/item-00'],
       '_path': 'foo/item-00',
       'remoteUrl': ''}
    logger INFO
        {'_old_paths': ['corge/grault', 'waldo/fred'],
       '_path': 'foo/bar',
       'remoteUrl': ''}
    logger INFO
        {'_old_paths': ['corge/grault/item-01', 'waldo/fred/item-01'],
       '_path': 'foo/bar/item-01',
       'remoteUrl': 'foo/item-00'}
    logger INFO
      {'_old_paths': [''], '_path': 'foo/bar/qux', 'remoteUrl': ''}
    logger INFO
        {'_old_paths': [''],
       '_path': 'foo/bar/qux/item-02',
       'remoteUrl': 'foo/bar/item-01'}

    >>> import pprint
    >>> from zope.component import getUtility
    >>> from plone.app.redirector.interfaces import IRedirectionStorage
    >>> storage = getUtility(IRedirectionStorage)
    >>> pprint.pprint([storage.redirects(path) for path in (
    ...     'foo', 'foo/item-00',
    ...     'foo/bar', 'foo/bar/item-01',
    ...     'foo/bar/qux', 'foo/bar/qux/item-02')])
    [['corge', 'waldo'],
     ['corge/item-00', 'waldo/item-00'],
     ['corge/grault', 'waldo/fred'],
     ['corge/grault/item-01', 'waldo/fred/item-01'],
     [],
     []]
